window.SIDEBAR_ITEMS = {"enum":[["SliderOrientation","Specifies the orientation of a [`Slider`]."]],"fn":[["global_dark_light_mode_buttons","Show larger buttons for switching between light and dark mode (globally)."],["global_dark_light_mode_switch","Show a small button to switch to/from dark/light mode (globally)."],["reset_button","Show a button to reset a value to its default. The button is only enabled if the value does not already have its original value."],["reset_button_with","Show a button to reset a value to its default. The button is only enabled if the value does not already have its original value."],["stroke_ui",""]],"mod":[["color_picker","Color picker widgets."],["plot","Simple plotting library."],["text_edit",""]],"struct":[["Button","Clickable button with text."],["Checkbox","Boolean on/off control with text label."],["DragValue","A numeric value that you can change by dragging the number. More compact than a [`Slider`]."],["Hyperlink","A clickable hyperlink, e.g. to `\"https://github.com/emilk/egui\"`."],["Image","An widget to show an image of a given size."],["ImageButton","A clickable image within a frame."],["Label","Static text."],["Link","Clickable text, that looks like a hyperlink."],["ProgressBar","A simple progress bar."],["RadioButton","One out of several alternatives, either selected or not."],["SelectableLabel","One out of several alternatives, either selected or not. Will mark selected items with a different background color. An alternative to [`RadioButton`] and [`Checkbox`]."],["Separator","A visual separator. A horizontal or vertical line (depending on [`Layout`])."],["Slider","Control a number with a slider."],["Spinner","A spinner widget used to indicate loading."],["TextEdit","A text region that the user can edit the contents of."]],"trait":[["TextBuffer","Trait constraining what types [`crate::TextEdit`] may use as an underlying buffer."],["Widget","Anything implementing Widget can be added to a [`Ui`] with [`Ui::add`]."],["WidgetWithState","Helper so that you can do `TextEdit::State::readâ€¦`"]]};